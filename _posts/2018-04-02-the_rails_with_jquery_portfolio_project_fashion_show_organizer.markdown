---
layout: post
title:      "The Rails with jQuery Portfolio Project – Fashion Show Organizer"
date:       2018-04-02 20:25:02 +0000
permalink:  the_rails_with_jquery_portfolio_project_fashion_show_organizer
---


The road to this, already forth in order portfolio project has been extremely interesting because it went through learning an actually new programming language, namely JavaScript. Up to that point Ruby had been the one and only, HTML being a markup and CSS a styling language, but leaning JavaScript was a reminder that there’s actually a lot more out there, and to me it immediately put coding into a multidimensional perspective. In and of itself JavaScript seems to be more controversial subject than extraterrestrial intelligence or life on Mars – there’s a lot of coders who are of the opinion that it shouldn’t even be there in the first place, but, as one of the Technical Coaches put it, it’s not about how difficult or seemingly inconvenient a language is, it’s about what you can actually do with it, and that’s probably exactly the way to approach JavaScript, because even on the jQuery stage it became apparent that with JavaScript pretty much sky is the limit. 

As I went through building the functionality required by the project, it was interesting to explore little things that can be important or even become compulsory in the future – for example, when clicking a button to roll out all the designs of a particular designer without refreshing the page, I made sure that a Display button turned into a Hide button, and clicking it rolled the list of the designs back in. To my surprise, figuring out how to do it in the show view wasn’t awfully hard (StackOverflow para siempre!), but in the index view with a number of Display buttons it actually required some imagination on how to bind each button to the respective designer by assigning additional ids and classes to them. The same kind of functionality can also be found in the show view of each individual design where a user can display all existing comments as well as the form for entering a new comment by clicking the Display button that turns into a Hide button after clicking, and then all the displayed content can be conveniently hidden. When creating a new design by filling a form and displaying the contents of the form upon submission without refreshing the page, it was also quite interesting to make sure that the form is cleared after submission and the Submit button is immediately reactivated. 

It’s now time to move on to React, and my conclusion from what I’ve heard about it so far is that React is quite a steep mountain to climb, but from the top of that mountain you can actually see the valley of the real programming life (not necessarily the Silicon Valley though, so no pun intended). So far every new stretch of the coding journey has been somewhat of a surprise in terms of its difficulty (both ways actually) as well as its contents and application, so I am now looking forward to embarking on this final stretch at last, hoping for it to be a springboard to many exciting things I will only be able to see and reach from the top of the React mountain. 

